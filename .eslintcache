[{"/home/mobcoder/Desktop/Projects/react-hooks-demo/src/index.js":"1","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/reportWebVitals.js":"2","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/App.js":"3","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/components/Demo.js":"4","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/store/store.js":"5","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/reducer/index.js":"6","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/reducer/reducer.js":"7","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/action/Actions.js":"8","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/services/index.js":"9","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/services/userServices.js":"10","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/config/api.js":"11","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/config/settings/index.js":"12","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/config/settings/development.js":"13","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/components/UseMemo.js":"14"},{"size":618,"mtime":1611555382883,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1611547485727,"results":"17","hashOfConfig":"16"},{"size":611,"mtime":1611570144548,"results":"18","hashOfConfig":"16"},{"size":5109,"mtime":1611567529392,"results":"19","hashOfConfig":"16"},{"size":299,"mtime":1591787964845,"results":"20","hashOfConfig":"16"},{"size":163,"mtime":1611555453603,"results":"21","hashOfConfig":"16"},{"size":288,"mtime":1611555595697,"results":"22","hashOfConfig":"16"},{"size":348,"mtime":1611555657933,"results":"23","hashOfConfig":"16"},{"size":32,"mtime":1611554479290,"results":"24","hashOfConfig":"16"},{"size":125,"mtime":1591786922721,"results":"25","hashOfConfig":"16"},{"size":115,"mtime":1591804700720,"results":"26","hashOfConfig":"16"},{"size":332,"mtime":1591786900225,"results":"27","hashOfConfig":"16"},{"size":112,"mtime":1591804635051,"results":"28","hashOfConfig":"16"},{"size":1856,"mtime":1611577721336,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"kj0jzz",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"/home/mobcoder/Desktop/Projects/react-hooks-demo/src/index.js",[],["64","65"],"/home/mobcoder/Desktop/Projects/react-hooks-demo/src/reportWebVitals.js",[],"/home/mobcoder/Desktop/Projects/react-hooks-demo/src/App.js",["66"],"import logo from './logo.svg';\nimport './App.css';\nimport Demo from \"./components/Demo\";\nimport UseMemo from \"./components/UseMemo\";\nimport React from \"react\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Demo />\n      <div style={{marginRight:\"30%\", marginLeft:\"30%\"}}>\n          <div style={{float:\"left\", width:\"100%\", padding:\"0 10px\"}}>\n              <div style={{boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",padding: \"30px 10px\",textAlign: \"center\",backgroundColor:\"lightblue\"}}>\n      <UseMemo />\n              </div>\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/components/Demo.js",["67","68"],"import React,{useEffect,useState,useContext,useRef} from 'react'\nimport { useDispatch, useSelector} from \"react-redux\";\nimport { getUser} from \"../action/Actions\";\n\nconst detailsContext = React.createContext();\n\nfunction ContextDemo(){\n    const value= useContext(detailsContext)\n    return (\n        <div>\n            <p>{value.employee_name}</p>\n            <p>Age:{value.employee_age}</p>\n        </div>\n    )\n}\nfunction Todo(props){\n    console.log('hsghs',props.todos)\n    return (\n        <div>\n            {props.todos.map((data,index)=>{\n                return(\n                    <p>{data.text}</p>\n                ) })}\n        </div>\n    )\n}\n\nfunction Demo(){\n    const [todo,setTodo] = useState([\n        {\n            text:'learn about react',\n            isCompleted:false\n        },\n        {\n            text:'learn about react-hook',\n            isCompleted:false\n        },\n        {\n            text:'learn about react-hook-demo',\n            isCompleted:false\n        }\n    ])\n\n    const [list, setList] = useState([])\n\n    const url = \"https://reqres.in/api/users?page=2\";\n\n    useEffect(()=>{\n      loadData()\n        fetchData()\n    },[])\n\n    // useEffect\n    const loadData = async () => {\n    const responce = await fetch(url)\n    const data = await responce.json();\n    setList(data.data)\n        console.log('gfhjjj',data.data)\n    }\n\n    const dispatch = useDispatch();\n\n    const dataFromReducer = useSelector((state)=>state.dataReducer)\n    console.log('reducer',dataFromReducer)\n\n\n    const fetchData = () => {\n        dispatch(getUser());\n    }\n\n    //useContext\n    const value = useContext(detailsContext);\n    console.log(value,'context')\n\n    //useRef\n    const [count,setCount] = useState(0)\n    const counter = useRef(null);\n\n    const incriment = () =>{\n        setCount(count + 1)\n    }\n    const decriment = () =>{\n        setCount(count - 1)\n    }\n\n    return(\n        <>\n        <div style={{background:\"lightcoral\"}}>\n        <h2>Demo</h2>\n        </div>\n          <div style={{backgroundColor:\"lightcyan\"}}>\n              <h2>useState</h2>\n              <Todo todos={todo}/>\n          </div>\n            <div style={{marginRight:\"20%\", marginLeft:\"30%\"}}>\n                <h2>useEffect</h2>\n                {\n                    list.map((item,index)=>{\n                      return(\n                          <div style={{float:\"left\", width:\"40%\", padding:\"0 10px\"}}>\n                          <div style={{boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",padding: \"30px\",textAlign: \"center\",backgroundColor:\"#f1f1f1\"}}>\n                          <p>{item.first_name + \" \" + item.last_name}</p>\n                              <p>{item.email}</p>\n                          </div>\n                          </div>\n                      )\n                    })\n                }\n            </div>\n            <div style={{marginRight:\"10%\", marginLeft:\"20%\"}}>\n\n                {\n                    dataFromReducer.map((item,index)=>{\n                        return(\n                            <div style={{float:\"left\", width:\"40%\", padding:\"10px 10px\"}}>\n\n                                <div style={{boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",padding: \"30px\",textAlign: \"center\",backgroundColor:\"coral\"}}>\n                                    <p>{item.employee_name}</p>\n                                    <p>Salary : {item.employee_salary}</p>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div style={{marginRight:\"20%\", marginLeft:\"30%\"}}>\n                <h2>useContext</h2>\n                {\n                    dataFromReducer.map((item,index)=>{\n                        return(\n                            <div style={{float:\"left\", width:\"40%\", padding:\"0 10px\"}}>\n                                <div style={{boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",padding: \"30px\",textAlign: \"center\",backgroundColor:\"#f1f1f1\"}}>\n                                    <detailsContext.Provider  value={item}>\n                                        <ContextDemo  />\n                                    </detailsContext.Provider>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n\n            </div >\n            <div style={{marginRight:\"20%\", marginLeft:\"43%\"}}>\n\n                <div style={{float:\"left\", width:\"40%\", padding:\"30px 10px\"}}>\n                    <h2>useRef</h2>\n                    <div style={{boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",padding: \"30px\",textAlign: \"center\",backgroundColor:\"lightcoral\"}}>\n\n                <h1>Count : <span ref={counter}>{count}</span></h1>\n                <button onClick={incriment} style={{backgroundColor:\"blueviolet\" ,width:\"30px\",padding:\"5px\"}}>+</button>\n                <button onClick={decriment} style={{backgroundColor:\"blueviolet\" ,width:\"30px\",padding:\"5px\"}}>-</button>\n                    </div>\n                </div>\n            </div>\n\n\n        </>\n    )\n}\nexport default Demo;\n","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/store/store.js",[],"/home/mobcoder/Desktop/Projects/react-hooks-demo/src/reducer/index.js",[],"/home/mobcoder/Desktop/Projects/react-hooks-demo/src/reducer/reducer.js",[],"/home/mobcoder/Desktop/Projects/react-hooks-demo/src/action/Actions.js",[],"/home/mobcoder/Desktop/Projects/react-hooks-demo/src/services/index.js",[],"/home/mobcoder/Desktop/Projects/react-hooks-demo/src/services/userServices.js",[],"/home/mobcoder/Desktop/Projects/react-hooks-demo/src/config/api.js",["69"],"import setting from './settings';\n\nexport default (\n    {\n        'GET_DATA': `${setting.api.url}employees`,\n    })","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/config/settings/index.js",[],"/home/mobcoder/Desktop/Projects/react-hooks-demo/src/config/settings/development.js",["70"],"export default {\n    api: {\n        url: 'http://dummy.restapiexample.com/api/v1/',\n        mode: 'cors'\n    }\n}","/home/mobcoder/Desktop/Projects/react-hooks-demo/src/components/UseMemo.js",["71"],"import React,{useState,useMemo,useCallback} from 'react';\n\nfunction UseMemo(){\n    const [wordIndex, setWordIndex] = useState(0)\n    const words =['hey','where','are','you'];\n    const word =words[wordIndex];\n    const computeLetterCount = word => {\n        let i = 0;\n        while (i < 1000) i++;\n        return word.length;\n    };\n    const letterCount = useMemo(() => computeLetterCount(word), [word]);\n\n    const initialCandies = ['snickers', 'dairy milk', 'oreo', 'silk']\n    const [candies, setCandies] = useState(initialCandies)\n    const dispense = useCallback(candy => {\n        setCandies(allCandies => allCandies.filter(c => c !== candy))\n    })\n\n    return (\n        <div>\n        <div style={{ padding: '15px' }}>\n            <h2>useMemo</h2>\n            <h2>Count number of letters</h2>\n            <p>\"{word}\" has {letterCount} letters</p>\n            <button\n                onClick={() => {\n                    const next = wordIndex + 1 === words.length ? 0 : wordIndex + 1;\n                    setWordIndex(next);\n                }}\n            >\n                Next word\n            </button>\n        </div>\n            <div>\n                <h1>useCallback</h1>\n                <div>\n                    <div>Available Candy</div>\n                    {candies.length === 0 ? (\n                        <button onClick={() => setCandies(initialCandies)}>refill</button>\n                    ) : (\n                        <ul>\n                            {candies.map(candy => (\n                                <p key={candy}>\n                                    <button onClick={() => dispense(candy)}>grab</button> {candy}\n                                </p>\n                            ))}\n                        </ul>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default UseMemo;\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":12},{"ruleId":"76","severity":1,"message":"80","line":29,"column":17,"nodeType":"78","messageId":"79","endLine":29,"endColumn":24},{"ruleId":"81","severity":1,"message":"82","line":51,"column":7,"nodeType":"83","endLine":51,"endColumn":9,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":3,"column":1,"nodeType":"87","endLine":6,"endColumn":7},{"ruleId":"85","severity":1,"message":"86","line":1,"column":1,"nodeType":"87","endLine":6,"endColumn":2},{"ruleId":"81","severity":1,"message":"88","line":16,"column":22,"nodeType":"78","endLine":16,"endColumn":33},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setTodo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["91"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [fetchData]",{"range":"94","text":"95"},[1159,1161],"[fetchData]"]