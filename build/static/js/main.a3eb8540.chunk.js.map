{"version":3,"sources":["logo.svg","config/settings/development.js","config/settings/index.js","config/api.js","action/Actions.js","services/userServices.js","components/Demo.js","components/UseMemo.js","App.js","reportWebVitals.js","reducer/reducer.js","reducer/index.js","store/store.js","index.js"],"names":["api","url","mode","settings","process","REACT_APP_ENV","merge","development","setting","dataTypes","getUser","dispatch","axios","get","API","GET_DATA","then","res","type","payload","data","console","log","detailsContext","React","createContext","ContextDemo","value","useContext","employee_name","employee_age","Todo","props","todos","map","index","text","Demo","useState","isCompleted","todo","list","setList","useEffect","loadData","fetchData","a","fetch","responce","json","useDispatch","dataFromReducer","useSelector","state","dataReducer","count","setCount","counter","useRef","style","background","backgroundColor","marginRight","marginLeft","item","float","width","padding","boxShadow","textAlign","first_name","last_name","email","employee_salary","Provider","ref","onClick","UseMemo","wordIndex","setWordIndex","words","word","letterCount","useMemo","i","length","computeLetterCount","initialCandies","candies","setCandies","dispense","useCallback","candy","allCandies","filter","c","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","user","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAAe,I,8ECAA,GACXA,IAAK,CACDC,IAAK,0CACLC,KAAM,SCARC,EAAW,GACF,aACX,OAAQC,mIAAYC,eAChB,IAAK,cACL,IAAK,MAEL,QACI,OAAOC,IAAMC,EAAaJ,IANvB,GCDX,GACI,SAAW,GAAX,OAAeK,EAAQR,IAAIC,IAA3B,cCFD,IAAMQ,EACA,WAICC,EAAQ,WAClB,OAAO,SAACC,GCJDC,IAAMC,IAAIC,EAAIC,UDKPC,MAAK,SAAAC,GACXN,EAAU,CACNO,KAAKT,EACLU,QAAQF,EAAIG,KAAKA,OAErBC,QAAQC,IAAI,MAAML,QEVxBM,EAAiBC,IAAMC,gBAE7B,SAASC,IACL,IAAMC,EAAOC,qBAAWL,GACxB,OACI,gCACI,4BAAII,EAAME,gBACV,qCAAQF,EAAMG,mBAI1B,SAASC,EAAKC,GAEV,OADAX,QAAQC,IAAI,QAAQU,EAAMC,OAEtB,8BACKD,EAAMC,MAAMC,KAAI,SAACd,EAAKe,GACnB,OACI,4BAAIf,EAAKgB,YA0IdC,MApIf,WAAgB,IAAD,EACYC,mBAAS,CAC5B,CACIF,KAAK,oBACLG,aAAY,GAEhB,CACIH,KAAK,yBACLG,aAAY,GAEhB,CACIH,KAAK,8BACLG,aAAY,KAZT,mBACJC,EADI,aAgBaF,mBAAS,KAhBtB,mBAgBJG,EAhBI,KAgBEC,EAhBF,KAoBXC,qBAAU,WACRC,IACEC,MACF,IAGF,IAAMD,EAAQ,uCAAG,8BAAAE,EAAA,sEACMC,MATX,sCAQK,cACXC,EADW,gBAEEA,EAASC,OAFX,OAEX7B,EAFW,OAGjBsB,EAAQtB,EAAKA,MACTC,QAAQC,IAAI,SAASF,EAAKA,MAJb,2CAAH,qDAORT,EAAWuC,cAEXC,EAAkBC,aAAY,SAACC,GAAD,OAASA,EAAMC,eACnDjC,QAAQC,IAAI,UAAU6B,GAGtB,IAAMN,EAAY,WACdlC,EAASD,MAIPiB,EAAQC,qBAAWL,GACzBF,QAAQC,IAAIK,EAAM,WA7CP,MAgDcW,mBAAS,GAhDvB,mBAgDJiB,EAhDI,KAgDEC,EAhDF,KAiDLC,EAAUC,iBAAO,MASvB,OACI,qCACA,qBAAKC,MAAO,CAACC,WAAW,cAAxB,SACA,wCAEE,sBAAKD,MAAO,CAACE,gBAAgB,aAA7B,UACI,0CACA,cAAC9B,EAAD,CAAME,MAAOO,OAEf,sBAAKmB,MAAO,CAACG,YAAY,MAAOC,WAAW,OAA3C,UACI,2CAEItB,EAAKP,KAAI,SAAC8B,EAAK7B,GACb,OACI,qBAAKwB,MAAO,CAACM,MAAM,OAAQC,MAAM,MAAOC,QAAQ,UAAhD,SACA,sBAAKR,MAAO,CAACS,UAAW,iCAAiCD,QAAS,OAAOE,UAAW,SAASR,gBAAgB,WAA7G,UACA,4BAAIG,EAAKM,WAAa,IAAMN,EAAKO,YAC7B,4BAAIP,EAAKQ,mBAO3B,qBAAKb,MAAO,CAACG,YAAY,MAAOC,WAAW,OAA3C,SAGQZ,EAAgBjB,KAAI,SAAC8B,EAAK7B,GACtB,OACI,qBAAKwB,MAAO,CAACM,MAAM,OAAQC,MAAM,MAAOC,QAAQ,aAAhD,SAEI,sBAAKR,MAAO,CAACS,UAAW,iCAAiCD,QAAS,OAAOE,UAAW,SAASR,gBAAgB,SAA7G,UACI,4BAAIG,EAAKnC,gBACT,0CAAamC,EAAKS,6BAO1C,sBAAKd,MAAO,CAACG,YAAY,MAAOC,WAAW,OAA3C,UACI,4CAEIZ,EAAgBjB,KAAI,SAAC8B,EAAK7B,GACtB,OACI,qBAAKwB,MAAO,CAACM,MAAM,OAAQC,MAAM,MAAOC,QAAQ,UAAhD,SACI,qBAAKR,MAAO,CAACS,UAAW,iCAAiCD,QAAS,OAAOE,UAAW,SAASR,gBAAgB,WAA7G,SACI,cAACtC,EAAemD,SAAhB,CAA0B/C,MAAOqC,EAAjC,SACI,cAACtC,EAAD,gBAS5B,qBAAKiC,MAAO,CAACG,YAAY,MAAOC,WAAW,OAA3C,SAEI,sBAAKJ,MAAO,CAACM,MAAM,OAAQC,MAAM,MAAOC,QAAQ,aAAhD,UACI,wCACA,sBAAKR,MAAO,CAACS,UAAW,iCAAiCD,QAAS,OAAOE,UAAW,SAASR,gBAAgB,cAA7G,UAEJ,0CAAY,sBAAMc,IAAKlB,EAAX,SAAqBF,OACjC,wBAAQqB,QAvEF,WACdpB,EAASD,EAAQ,IAsEmBI,MAAO,CAACE,gBAAgB,aAAcK,MAAM,OAAOC,QAAQ,OAAvF,eACA,wBAAQS,QArEF,WACdpB,EAASD,EAAQ,IAoEmBI,MAAO,CAACE,gBAAgB,aAAcK,MAAM,OAAOC,QAAQ,OAAvF,2BChGDU,MApDf,WAAmB,IAAD,EACoBvC,mBAAS,GAD7B,mBACPwC,EADO,KACIC,EADJ,KAERC,EAAO,CAAC,MAAM,QAAQ,MAAM,OAC5BC,EAAMD,EAAMF,GAMZI,EAAcC,mBAAQ,kBALD,SAAAF,GAEvB,IADA,IAAIG,EAAI,EACDA,EAAI,KAAMA,IACjB,OAAOH,EAAKI,OAEkBC,CAAmBL,KAAO,CAACA,IAEvDM,EAAiB,CAAC,WAAY,aAAc,OAAQ,QAX5C,EAYgBjD,mBAASiD,GAZzB,mBAYPC,EAZO,KAYEC,EAZF,KAaRC,EAAWC,uBAAY,SAAAC,GACzBH,GAAW,SAAAI,GAAU,OAAIA,EAAWC,QAAO,SAAAC,GAAC,OAAIA,IAAMH,WAG1D,OACI,gCACA,sBAAKjC,MAAO,CAAEQ,QAAS,QAAvB,UACI,yCACA,yDACA,kCAAKc,EAAL,SAAiBC,EAAjB,cACA,wBACIN,QAAS,WAELG,EADaD,EAAY,IAAME,EAAMK,OAAS,EAAIP,EAAY,IAFtE,0BASA,gCACI,6CACA,gCACI,kDACoB,IAAnBU,EAAQH,OACL,wBAAQT,QAAS,kBAAMa,EAAWF,IAAlC,oBAEA,6BACKC,EAAQtD,KAAI,SAAA0D,GAAK,OACd,8BACI,wBAAQhB,QAAS,kBAAMc,EAASE,IAAhC,kBADJ,IAC2DA,IADnDA,kBCrBzBI,MAff,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKtC,MAAO,CAACG,YAAY,MAAOC,WAAW,OAA3C,SACI,qBAAKJ,MAAO,CAACM,MAAM,OAAQC,MAAM,OAAQC,QAAQ,UAAjD,SACI,qBAAKR,MAAO,CAACS,UAAW,iCAAiCD,QAAS,YAAYE,UAAW,SAASR,gBAAgB,aAAlH,SACR,cAAC,EAAD,cCFSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpF,MAAK,YAAkD,IAA/CqF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,eCLRO,EAAK,GAWIpD,EATK,WAAsB,IAArBD,EAAoB,uDAAdqD,EAAKC,EAAS,uCAErC,OADAtF,QAAQC,IAAI,QAAQ+B,GACbsD,EAAOzF,MAEV,KAAKT,EAAmB,OAAO,YAAIkG,EAAOxF,SAC1C,QAAS,OAAOkC,ICFTuD,EAJKC,YAAgB,CAChCvD,gB,gBCSWwD,EAPDC,YACVH,EACAI,YACIC,IAAgBC,WCFxBC,IAASC,OACL,eAAC,IAAD,CAAUN,MAAOA,EAAjB,UACF,cAAC,IAAMO,WAAP,UACE,cAAC,EAAD,MAFA,OAKFC,SAASC,eAAe,SAM1BrB,K","file":"static/js/main.a3eb8540.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default {\n    api: {\n        url: 'http://dummy.restapiexample.com/api/v1/',\n        mode: 'cors'\n    }\n}","import merge from 'lodash/merge';\nimport development from './development';\n\nconst settings = {}\nexport default (() => {\n    switch (process.env.REACT_APP_ENV) {\n        case 'development':\n        case 'dev':\n            return merge(development, settings)\n        default:\n            return merge(development, settings)\n    }\n})()","import setting from './settings';\n\nexport default (\n    {\n        'GET_DATA': `${setting.api.url}employees`,\n    })","import {getData} from '../services'\n\nexport const dataTypes={\n    GET_DATA:'GET_DATA'\n}\n\n\nexport const  getUser=()=>{\n    return (dispatch)=>{\n        getData().then(res=>{\n            dispatch( {\n                type:dataTypes.GET_DATA,\n                payload:res.data.data\n            })\n            console.log('pay',res)\n        })\n\n\n\n    }\n}\n","import axios from 'axios';\nimport API from '../config/api'\n\nexport function getData(){\n    return axios.get(API.GET_DATA);\n}\n","import React,{useEffect,useState,useContext,useRef} from 'react'\nimport { useDispatch, useSelector} from \"react-redux\";\nimport { getUser} from \"../action/Actions\";\n\nconst detailsContext = React.createContext();\n\nfunction ContextDemo(){\n    const value= useContext(detailsContext)\n    return (\n        <div>\n            <p>{value.employee_name}</p>\n            <p>Age:{value.employee_age}</p>\n        </div>\n    )\n}\nfunction Todo(props){\n    console.log('hsghs',props.todos)\n    return (\n        <div>\n            {props.todos.map((data,index)=>{\n                return(\n                    <p>{data.text}</p>\n                ) })}\n        </div>\n    )\n}\n\nfunction Demo(){\n    const [todo,setTodo] = useState([\n        {\n            text:'learn about react',\n            isCompleted:false\n        },\n        {\n            text:'learn about react-hook',\n            isCompleted:false\n        },\n        {\n            text:'learn about react-hook-demo',\n            isCompleted:false\n        }\n    ])\n\n    const [list, setList] = useState([])\n\n    const url = \"https://reqres.in/api/users?page=2\";\n\n    useEffect(()=>{\n      loadData()\n        fetchData()\n    },[])\n\n    // useEffect\n    const loadData = async () => {\n    const responce = await fetch(url)\n    const data = await responce.json();\n    setList(data.data)\n        console.log('gfhjjj',data.data)\n    }\n\n    const dispatch = useDispatch();\n\n    const dataFromReducer = useSelector((state)=>state.dataReducer)\n    console.log('reducer',dataFromReducer)\n\n\n    const fetchData = () => {\n        dispatch(getUser());\n    }\n\n    //useContext\n    const value = useContext(detailsContext);\n    console.log(value,'context')\n\n    //useRef\n    const [count,setCount] = useState(0)\n    const counter = useRef(null);\n\n    const incriment = () =>{\n        setCount(count + 1)\n    }\n    const decriment = () =>{\n        setCount(count - 1)\n    }\n\n    return(\n        <>\n        <div style={{background:\"lightcoral\"}}>\n        <h2>Demo</h2>\n        </div>\n          <div style={{backgroundColor:\"lightcyan\"}}>\n              <h2>useState</h2>\n              <Todo todos={todo}/>\n          </div>\n            <div style={{marginRight:\"20%\", marginLeft:\"30%\"}}>\n                <h2>useEffect</h2>\n                {\n                    list.map((item,index)=>{\n                      return(\n                          <div style={{float:\"left\", width:\"40%\", padding:\"0 10px\"}}>\n                          <div style={{boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",padding: \"30px\",textAlign: \"center\",backgroundColor:\"#f1f1f1\"}}>\n                          <p>{item.first_name + \" \" + item.last_name}</p>\n                              <p>{item.email}</p>\n                          </div>\n                          </div>\n                      )\n                    })\n                }\n            </div>\n            <div style={{marginRight:\"10%\", marginLeft:\"20%\"}}>\n\n                {\n                    dataFromReducer.map((item,index)=>{\n                        return(\n                            <div style={{float:\"left\", width:\"40%\", padding:\"10px 10px\"}}>\n\n                                <div style={{boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",padding: \"30px\",textAlign: \"center\",backgroundColor:\"coral\"}}>\n                                    <p>{item.employee_name}</p>\n                                    <p>Salary : {item.employee_salary}</p>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div style={{marginRight:\"20%\", marginLeft:\"30%\"}}>\n                <h2>useContext</h2>\n                {\n                    dataFromReducer.map((item,index)=>{\n                        return(\n                            <div style={{float:\"left\", width:\"40%\", padding:\"0 10px\"}}>\n                                <div style={{boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",padding: \"30px\",textAlign: \"center\",backgroundColor:\"#f1f1f1\"}}>\n                                    <detailsContext.Provider  value={item}>\n                                        <ContextDemo  />\n                                    </detailsContext.Provider>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n\n            </div >\n            <div style={{marginRight:\"20%\", marginLeft:\"43%\"}}>\n\n                <div style={{float:\"left\", width:\"40%\", padding:\"30px 10px\"}}>\n                    <h2>useRef</h2>\n                    <div style={{boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",padding: \"30px\",textAlign: \"center\",backgroundColor:\"lightcoral\"}}>\n\n                <h1>Count : <span ref={counter}>{count}</span></h1>\n                <button onClick={incriment} style={{backgroundColor:\"blueviolet\" ,width:\"30px\",padding:\"5px\"}}>+</button>\n                <button onClick={decriment} style={{backgroundColor:\"blueviolet\" ,width:\"30px\",padding:\"5px\"}}>-</button>\n                    </div>\n                </div>\n            </div>\n\n\n        </>\n    )\n}\nexport default Demo;\n","import React,{useState,useMemo,useCallback} from 'react';\n\nfunction UseMemo(){\n    const [wordIndex, setWordIndex] = useState(0)\n    const words =['hey','where','are','you'];\n    const word =words[wordIndex];\n    const computeLetterCount = word => {\n        let i = 0;\n        while (i < 1000) i++;\n        return word.length;\n    };\n    const letterCount = useMemo(() => computeLetterCount(word), [word]);\n\n    const initialCandies = ['snickers', 'dairy milk', 'oreo', 'silk']\n    const [candies, setCandies] = useState(initialCandies)\n    const dispense = useCallback(candy => {\n        setCandies(allCandies => allCandies.filter(c => c !== candy))\n    })\n\n    return (\n        <div>\n        <div style={{ padding: '15px' }}>\n            <h2>useMemo</h2>\n            <h2>Count number of letters</h2>\n            <p>\"{word}\" has {letterCount} letters</p>\n            <button\n                onClick={() => {\n                    const next = wordIndex + 1 === words.length ? 0 : wordIndex + 1;\n                    setWordIndex(next);\n                }}\n            >\n                Next word\n            </button>\n        </div>\n            <div>\n                <h1>useCallback</h1>\n                <div>\n                    <div>Available Candy</div>\n                    {candies.length === 0 ? (\n                        <button onClick={() => setCandies(initialCandies)}>refill</button>\n                    ) : (\n                        <ul>\n                            {candies.map(candy => (\n                                <p key={candy}>\n                                    <button onClick={() => dispense(candy)}>grab</button> {candy}\n                                </p>\n                            ))}\n                        </ul>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default UseMemo;\n","import logo from './logo.svg';\nimport './App.css';\nimport Demo from \"./components/Demo\";\nimport UseMemo from \"./components/UseMemo\";\nimport React from \"react\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Demo />\n      <div style={{marginRight:\"30%\", marginLeft:\"30%\"}}>\n          <div style={{float:\"left\", width:\"100%\", padding:\"0 10px\"}}>\n              <div style={{boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2)\",padding: \"30px 10px\",textAlign: \"center\",backgroundColor:\"lightblue\"}}>\n      <UseMemo />\n              </div>\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {dataTypes} from '../action/Actions';\n\nconst user=[];\n\nconst  dataReducer= (state=user,action)=>{\n    console.log('hgdhs',state)\n    switch(action.type){\n\n        case dataTypes.GET_DATA:return [...action.payload]\n        default: return state\n    }\n}\n\nexport default dataReducer;\n","import {combineReducers} from 'redux'\nimport dataReducer from './reducer';\n\nconst rootReducer = combineReducers({\n    dataReducer\n});\n\nexport default rootReducer;\n","import rootReducer from '../reducer';\nimport thunkMiddleware from 'redux-thunk';\nimport {applyMiddleware, createStore} from 'redux';\nimport {logger} from 'redux-logger';\n\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware,logger\n    )\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\nimport {Provider} from \"react-redux\";\nReactDOM.render(\n    <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}